From: meta/recipes-devtools/python/python3/12-distutils-prefix-is-inside-staging-area.patch
Rev: e2c3247c233876ab090c9ce3d5325a6d46ab350f

This patch is rebased to debian source.

diff --git a/Lib/distutils/sysconfig.py b/Lib/distutils/sysconfig.py
index 50e8f04..0a6de72 100644
--- a/Lib/distutils/sysconfig.py
+++ b/Lib/distutils/sysconfig.py
@@ -93,7 +93,9 @@ def get_python_inc(plat_specific=0, prefix=None):
     If 'prefix' is supplied, use it instead of sys.base_prefix or
     sys.base_exec_prefix -- i.e., ignore 'plat_specific'.
     """
-    if prefix is None:
+    if prefix is None and os.environ['STAGING_INCDIR'] != "":
+        prefix = os.environ['STAGING_INCDIR'].rstrip('include')
+    elif prefix is None:
         prefix = plat_specific and BASE_EXEC_PREFIX or BASE_PREFIX
     if os.name == "posix":
         if python_build:
@@ -140,6 +142,11 @@ def get_python_lib(plat_specific=0, standard_lib=0, prefix=None):
     sys.base_exec_prefix -- i.e., ignore 'plat_specific'.
     """
     is_default_prefix = not prefix or os.path.normpath(prefix) in ('/usr', '/usr/local')
+
+    lib_basename = os.environ['STAGING_LIBDIR'].split('/')[-1]
+    if prefix is None and os.environ['STAGING_LIBDIR'] != "":
+        prefix = os.environ['STAGING_LIBDIR'].rstrip(lib_basename)
+
     if prefix is None:
         if standard_lib:
             prefix = plat_specific and BASE_EXEC_PREFIX or BASE_PREFIX
@@ -148,7 +155,7 @@ def get_python_lib(plat_specific=0, standard_lib=0, prefix=None):
 
     if os.name == "posix":
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 lib_basename, "python" + get_python_version())
         if standard_lib:
             return libpython
         elif (is_default_prefix and
